generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("postgresql://postgres:postgres@db:5435/postgres?schema=public")
}

model Board {
  id        String    @id @default(cuid())
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  title     String
  lists     List[]
  messages  Message[]

  @@map("board")
}

model List {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  label     String
  boardId   String   @map("board_id")
  board     Board    @relation(fields: [boardId], references: [id], onDelete: Cascade)
  tasks     Task[]

  @@map("list")
}

model Task {
  id          String    @id @default(cuid())
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  name        String
  priority    Priority?
  status      String
  description String
  dueDate     String
  listId      String    @map("list_id")
  list        List      @relation(fields: [listId], references: [id], onDelete: Cascade)

  @@map("task")
}

model Message {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  taskId    String
  board     Board    @relation(fields: [boardId], references: [id], onDelete: Cascade)
  boardId   String
  message   String
}

enum Priority {
  low
  medium
  high
}
